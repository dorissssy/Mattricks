; ModuleID = 'MicroC'
source_filename = "MicroC"

@fmt = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@fmt.1 = private unnamed_addr constant [4 x i8] c"%f\0A\00", align 1

declare i32 @printf(i8*, ...)

define i32 @main(i32 %x) {
entry:
  %x1 = alloca i32
  store i32 %x, i32* %x1
  %a = alloca i32
  store i32 3, i32* %a
  %f = alloca double
  store double 3.333330e+00, double* %f
  %tmp = alloca [4 x i32], i32 0
  %tmp2 = getelementptr [4 x i32], [4 x i32]* %tmp, i32 0, i32 1
  store i32 3, i32* %tmp2
  %tmp3 = getelementptr [4 x i32], [4 x i32]* %tmp, i32 0, i32 1
  %tmp4 = load i32, i32* %tmp3
  %printf = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt, i32 0, i32 0), i32 %tmp4)
  %tmp5 = getelementptr [4 x i32], [4 x i32]* %tmp, i32 0, i32 2
  store i32 4, i32* %tmp5
  %tmp6 = getelementptr [4 x i32], [4 x i32]* %tmp, i32 0, i32 2
  %tmp7 = load i32, i32* %tmp6
  %tmp8 = getelementptr [4 x i32], [4 x i32]* %tmp, i32 0, i32 2
  %tmp9 = load i32, i32* %tmp8
  %tmp10 = add i32 %tmp7, %tmp9
  store i32 %tmp10, i32* %a
  %a11 = load i32, i32* %a
  %a12 = load i32, i32* %a
  %tmp13 = add i32 %a11, %a12
  store i32 %tmp13, i32* %a
  %a14 = load i32, i32* %a
  %printf15 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt, i32 0, i32 0), i32 %a14)
  store double 0x4011C71C6ECB8FB6, double* %f
  %a16 = load i32, i32* %a
  %printf17 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt, i32 0, i32 0), i32 %a16)
  %f18 = load double, double* %f
  %printf19 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt.1, i32 0, i32 0), double %f18)
  %printf20 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt, i32 0, i32 0), i32 3)
  %printf21 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt.1, i32 0, i32 0), double 3.330000e+00)
  %printf22 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt, i32 0, i32 0), i1 true)
  %printf23 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt, i32 0, i32 0), i1 false)
  ret i32 0
}
